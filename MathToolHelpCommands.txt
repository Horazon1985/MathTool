<html><head></head><body><font size="5"><b>Konsolenbefehle:</b></font><br><br>

MathTool kennt die folgenden Befehle:<br><br>

<b>Befehl approx(EXPRESSION):</b> Approximiert den Ausdruck EXPRESSION.<br><br>

<i>Beispiel</i> approx(3^0.5) liefert die Ausgabe<br><br> 

1.7320508075688772<br><br>

<b>Befehl clear():</b> Leert die gesamte Konsole.<br><br>

<b>Befehl def(VAR = VALUE):</b> Weist einer g&uuml;ltigen Variable VAR den Wert VALUE zu.<br><br>

<b>Befehl def(FUNCTION = EXPRESSION):</b> Definiert eine Funktion durch den Ausdruck EXPRESSION.<br><br> 

<b>Befehl euler(n):</b> Gibt die ersten n Stellen der Eulerschen Zahl e aus.<br><br>

<i>Beispiel</i> euler(20) liefert die Ausgabe<br><br> 

2.71828182845904523536<br><br>

Die Zahl n darf hier aus Speichergr&uuml;nden maximal 20000 betragen.<br><br>

<b>Befehl latex(EXPRESSION):</b> Generiert den Latex-Code für den mathematischen Ausdruck EXPRESSION.<br><br>

<b>Befehl pi(n):</b> Gibt die ersten n Stellen der Kreiszahl Pi aus.<br><br>

<i>Beispiel</i> pi(20) liefert die Ausgabe<br><br> 

3.14159265358979323846<br><br>

Die Zahl n darf hier aus Speichergr&uuml;nden maximal 20000 betragen.<br><br>

<b>Befehl plot(FUNCTION_1(VAR), ..., FUNCTION_k(VAR), x_1, x_2):</b> Zeichnet den Graphen der Funktionen FUNCTION_1, ..., FUNCTION_k im Intervall von x_1 <= VAR <= x_2.<br><br>
  
<b>Befehl plot(FUNCTION(VAR_1, VAR_2), x_1, x_2, y_1, y_2):</b> Zeichnet den Graphen der Funktion FUNCTION von zwei Variablen im Rechteck x_1 <= VAR_1 <= x_2, y_1 <= VAR_2 <= y_2.
Wichtig: Die Grenzen x_1, x_2, y_1, y_2 sollen so angegeben werden, dass VAR_1, VAR_2 die alphabetische Reihenfolge der Variablen ist.<br><br>

<b>Befehl solve(FUNCTION_1(VAR) = FUNCTION_2(VAR, x_1, x_2):</b> Bestimmt die L&ouml;sungen der Gleichung FUNCTION_1(VAR) = FUNCTION_2(VAR) im Bereich x_1 <= VAR <= x_2.<br><br>

<b>Befehl solve(FUNCTION_1(VAR) = FUNCTION_2(VAR, x_1, x_2, n):</b> Bestimmt die L&ouml;sungen der Gleichung FUNCTION_1(VAR) = FUNCTION_2(VAR) im Bereich x_1 <= VAR <= x_2.
Hierbei wird das Intervall [x_1, x_2] in n gleiche Teile unterteilt und in jedem Teilintervall wird h&ouml;chstens eine L&ouml;sung ermittelt. H&ouml;heres n kann zwar
potentiell mehr L&ouml;sungen liefern, verl&auml;ngert daf&uuml;r aber die Berechnungszeit.<br><br>

<b>Befehl solvedgl(FUNCTION_1(VAR_1, VAR_2, VAR_2', VAR_2'', ..., var_2^(k)), VAR, n, x_0, x_1, y_0, y_1, ..., y_{n - 1}):</b> Liefert eine numerische L&ouml;sung
der Diferentialgleichung y^{n} = FUNCTION_1(VAR_1, VAR_2, VAR_2', VAR_2'', ..., var_2^(k)), VAR_2(x_0) = y_0, ..., VAR_2^{n - 1}(x_0) = y_{n - 1} im Bereich x_0 <= VAR_1 <= x_1.
F&uuml;r die numerische Berechnung wird das Intervall [x_0, x_1] in 1000 gleiche Teile unterteilt und in der Konsole werden alle 1000 Funktionswerte an den betreffenden
Stellen ausgegeben.<br><br>

<i>Beispiel</i> solvedgl(-y,t,2,0,10,1,0) liefert eine numerische L&ouml;sung der Differentialgleichung y''(t) = -y(t), y(0) = 1, y'(0) = 0 im Bereich 0 <= t <= 10. Hierbei werden
1000 Funktionswerte von y(t) ausgegeben; die Schrittweite betr&auml;gt daher 0.01.<br><br>

<b>Befehl taylordgl(FUNCTION_1(VAR_1, VAR_2, VAR_2', VAR_2'', ..., var_2^(k)), VAR, n, x_0, y_0, y_1, ..., y_{n - 1}, k):</b> Liefert das Taylorpolynom k-ten Grades
von der L&ouml;sung der Diferentialgleichung y^{n} = FUNCTION_1(VAR_1, VAR_2, VAR_2', VAR_2'', ..., var_2^(k)), VAR_2(x_0) = y_0, ..., VAR_2^{n - 1}(x_0) = y_{n - 1}.<br><br>

<i>Beispiel</i> taylordgl(-y,t,2,0,1,0,10) liefert das Taylorpolynom 10. Grades von der L&ouml;sung der Differentialgleichung y''(t) = -y(t), y(0) = 1, y'(0) = 0. Die
exakte L&ouml;sung ist y(t) = cos(t), als Potenzreiche ausgedr&uuml;ckt also<br><br> 

y(t) = cos(t) = 1 - t^2/2! + t^4/4! - t^6/6! + ...<br><br>

Dementsprechend lautet die Ausgabe dann<br><br>

1 - t^2/2 + t^4/24 - t^6/720 + t^8/40320 - t^10/3628800.<br><br>

<b>Befehl undef(VAR_1, ..., VAR_n):</b> Gibt die Variablen VAR_1, ..., VAR_k wieder frei.<br><br>

<b>Befehl undefall():</b> Gibt alle Variablen wieder frei, denen im Laufe dieser Sitzung ein Wert zugewiesen wurde.<br><br>

Alle Konsolenbefehle, die w&auml;hrend einer Sitzung eingegeben wurden, werden gespreichert und k&ouml;nnen mit Pfeiltasten abgerufen werden (Pfeiltaste UP = vorheriger Befehl,
Pfeiltaste DOWN = n&auml;chster Befehl).
</body></html>
